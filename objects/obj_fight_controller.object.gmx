<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>&lt;undefined&gt;</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>-100000</depth>
  <persistent>-1</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Initialize main variables
global.is_fight = false;
box1 = true;
box2 = false;
box3 = false;
box4 = false;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Move cursor

var up = keyboard_check_pressed(ord('W'));
var down = keyboard_check_pressed(ord('S'));
var left = keyboard_check_pressed(ord('A'));
var right = keyboard_check_pressed(ord('D'));

if (global.is_fight) {
    if (up &amp;&amp; box2) {
        box1 = true;
        box2 = false;
        box3 = false;
        box4 = false;
    }
    if (up &amp;&amp; box4) {
        box1 = false;
        box2 = false;
        box3 = true;
        box4 = false;
    }
    if (down &amp;&amp; box1) {
        box1 = false;
        box2 = true;
        box3 = false;
        box4 = false;
    }
    if (down &amp;&amp; box3) {
        box1 = false;
        box2 = false;
        box3 = false;
        box4 = true;
    }
    if (right &amp;&amp; box1) {
        box1 = false;
        box2 = false;
        box3 = true;
        box4 = false;
    }
    if (right &amp;&amp; box2) {
        box1 = false;
        box2 = false;
        box3 = false;
        box4 = true;
    }
    if (left &amp;&amp; box3) {
        box1 = true;
        box2 = false;
        box3 = false;
        box4 = false;
    }
    if (left &amp;&amp; box4) {
        box1 = false;
        box2 = true;
        box3 = false;
        box4 = false;
    }
    
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Draw fighting arena
color_back = make_colour_rgb(25, 0, 20);
color_bar = make_colour_rgb(12, 0, 15);
draw_set_halign(fa_center);
draw_set_valign(fa_middle);
if (global.is_fight) {
    draw_set_alpha(1);
    // Background
    draw_rectangle_colour(view_xview[0], view_yview[0], view_xview[0]+640, view_yview[0]+360, color_back, color_back, color_back, color_back, false);
    //Bars
    draw_rectangle_colour(view_xview[0], view_yview[0], view_xview[0]+90, view_yview[0]+view_wport[0], color_bar, color_bar, color_bar, color_bar, false);
    draw_rectangle_colour(view_xview[0]+550, view_yview[0], view_xview[0]+640, view_yview[0]+view_wport[0], color_bar, color_bar, color_bar, color_bar, false);
    //Boxs
    draw_roundrect_colour(view_xview[0]+15, view_yview[0]+45, view_xview[0]+75, view_yview[0]+75, c_white, c_white, true);
    draw_roundrect_colour(view_xview[0]+15, view_yview[0]+120, view_xview[0]+75, view_yview[0]+150, c_white, c_white, true);
    draw_roundrect_colour(view_xview[0]+565, view_yview[0]+45, view_xview[0]+625, view_yview[0]+75, c_white, c_white, true);
    draw_roundrect_colour(view_xview[0]+565, view_yview[0]+120, view_xview[0]+625, view_yview[0]+150, c_white, c_white, true);
    
    if (box1) {
        draw_set_alpha(1);
        draw_set_font(boldfight);
        draw_text(view_xview[0]+45, view_yview[0]+61, "FIGHT");
        draw_set_alpha(.2);
        draw_roundrect_colour(view_xview[0]+15, view_yview[0]+45, view_xview[0]+75, view_yview[0]+75, c_white, c_white, false);
    } else {
        draw_set_alpha(1);
        draw_set_font(boldfight);
        draw_text(view_xview[0]+45, view_yview[0]+61, "FIGHT");
    }
    if (box2) {
        draw_set_alpha(1);
        draw_set_font(boldfight);
        draw_text(view_xview[0]+45, view_yview[0]+136, "ITEMS");
        draw_set_alpha(.2);
        draw_roundrect_colour(view_xview[0]+15, view_yview[0]+120, view_xview[0]+75, view_yview[0]+150, c_white, c_white, false);
    } else {
        draw_set_alpha(1);
        draw_set_font(boldfight);
        draw_text(view_xview[0]+45, view_yview[0]+136, "ITEMS");
    }
    if (box3) {
        draw_set_alpha(1);
        draw_set_font(boldfight);
        draw_text(view_xview[0]+595, view_yview[0]+61, "RUNES");
        draw_set_alpha(.2);
        draw_roundrect_colour(view_xview[0]+565, view_yview[0]+45, view_xview[0]+625, view_yview[0]+75, c_white, c_white, false);
    } else {
        draw_set_alpha(1);
        draw_set_font(boldfight);
        draw_text(view_xview[0]+595, view_yview[0]+61, "RUNES");
    }
    if (box4) {
        draw_set_alpha(1);
        draw_set_font(boldfight);
        draw_text(view_xview[0]+595, view_yview[0]+136, "FLEE");
        draw_set_alpha(.2);
        draw_roundrect_colour(view_xview[0]+565, view_yview[0]+120, view_xview[0]+625, view_yview[0]+150, c_white, c_white, false);
    } else {
        draw_set_alpha(1);
        draw_set_font(boldfight);
        draw_text(view_xview[0]+595, view_yview[0]+136, "FLEE");
    }
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="9" enumb="18">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>global.is_fight = !global.is_fight;
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
